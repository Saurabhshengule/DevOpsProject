trigger:
  branches:
    include:
      - main  # Run pipeline when code is pushed to main

variables:
  imageName: 'nodejs-app'
  tag: 'latest'
  acrLoginServer: 'myappregistry15.azurecr.io'  # Replace with your ACR login server
  azureSubscription: 'azure-pipeline-connection'   # Service connection name in Azure DevOps
  appServiceName: 'nodejs15'                       # Replace with your App Service name
  resourceGroupName: 'demo1'          # Replace with your Resource Group name

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: AzureCLI@2
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      echo "Logging in to ACR..."
      az acr login --name $(acrLoginServer)

      echo "Building Docker image..."
      docker build -t $(acrLoginServer)/$(imageName):$(tag) .

      echo "Pushing image to ACR..."
      docker push $(acrLoginServer)/$(imageName):$(tag)

      echo "Updating App Service to use new image..."
      az webapp config container set \
        --name $(appServiceName) \
        --resource-group $(resourceGroupName) \
        --docker-custom-image-name $(acrLoginServer)/$(imageName):$(tag) \
        --docker-registry-server-url https://$(acrLoginServer)

      echo "Restarting App Service..."
      az webapp restart --name $(appServiceName) --resource-group $(resourceGroupName)
  displayName: 'Build and Deploy Docker Image to Azure Web App'
